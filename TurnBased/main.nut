// title:   Turn Based Prototype
// author:  Adrian Azan, https://github.com/adrian-azan, etc.
// desc:    A prototype for a basic fight in a turn based RPG
// license: MIT License
// version: 0.1
// script:  squirrel

#include tools.azn
#include globals.azn
#include constants.azn
#include enums.azn


#include transform.azn
#include Object.azn
#include GameObject.azn
#include MainMenu.azn



#include button.azn
#include BeatLine.azn
#include ActionLane.azn



local player = GameObject()
local menu = MainMenu(player)

local enemy = GameObject()

local actionLane = ActionLane( )


player.transform.x = SCREEN_WIDTH * 0.1
player.transform.y = SCREEN_HEIGHT * 0.8
player.transform.scale = 2

enemy.transform.x = SCREEN_WIDTH * 0.8
enemy.transform.y = SCREEN_HEIGHT * 0.8
enemy.transform.scale = 2


OBJECTS.sort(SortByDepth)
function TIC()
{
	cls(10)

	print(Score, 10, 10)

	GRAPHICS_PIPELINE()
	UPDATE_PIPELINE()
	if ( btnp(2) )
	{
		menu.Prev()
		actionLane.AddButton()
	}

	if (btnp(3))
		menu.Next()
}


function GRAPHICS_PIPELINE()
{
	foreach (idx, val in OBJECTS)
	{
		try
		{
			val.Draw()
		}
		catch(exception)
		{
			trace("Graphics Failure" + val)
		}
	}
}

function UPDATE_PIPELINE()
{
	foreach (idx, val in OBJECTS)
	{
		try {
			val.Update()
		} catch (exception){
			trace("Update Failure" + val)
		}

	}
}

// <TILES>
// 000:00000ddd000ddddd00dddddd0ddddddd0ddddddddddddddddddddddddddddddd
// 001:ddd00000ddddd000dddddd00ddddddd0ddddddd0dddddddddddddddddddddddd
// 002:0000022200022222002222220222222202222222222222222222222222222222
// 003:2220000022222000222222002222222022222220222222222222222222222222
// 004:00000bbb000bbbbb00bbbbbb0bbbbbbb0bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb
// 005:bbb00000bbbbb000bbbbbb00bbbbbbb0bbbbbbb0bbbbbbbbbbbbbbbbbbbbbbbb
// 006:0000044400044444004444440444444404444444444444444444444444444444
// 007:4440000044444000444444004444444044444440444444444444444444444444
// 016:dddddddddddddddddddddddd0ddddddd0ddddddd00dddddd000ddddd00000ddd
// 017:ddddddddddddddddddddddddddddddd0ddddddd0dddddd00ddddd000ddd00000
// 018:2222222222222222222222220222222202222222002222220002222200000222
// 019:2222222222222222222222222222222022222220222222002222200022200000
// 020:bbbbbbbbbbbbbbbbbbbbbbbb0bbbbbbb0bbbbbbb00bbbbbb000bbbbb00000bbb
// 021:bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb0bbbbbbb0bbbbbb00bbbbb000bbb00000
// 022:4444444444444444444444440444444404444444004444440004444400000444
// 023:4444444444444444444444444444444044444440444444004444400044400000
// 032:000000000000000000000ccc0000c0000000c0000000c0000000c0000000c000
// 033:0000000000000000cc00000000c0000000c0000000c0000000c000000c000000
// 034:000000000000000c000000c0000000c000000c0000000c0000000c000000cccc
// 035:0000000000000000c0000000c00000000c0000000c0000000c000000ccc00000
// 036:000000000000000000c00000000c00000000c00000000c00000000c00000000c
// 037:000000000000000000000c000000c000000c000000c000000c000000c0000000
// 038:00000000000000000000c00000000c00000000c00000000c0000000000000000
// 039:00000000000000000000c000000c000000c000000c000000c0000000c0000000
// 048:0000cccc0000c0000000c0000000c0000000c00000000ccc0000000000000000
// 049:cc00000000c00000000c0000000c0000000c0000ccc000000000000000000000
// 050:0000c0000000c000000c0000000c000000c00000000000000000000000000000
// 051:00c0000000c00000000c0000000c00000000c000000000000000000000000000
// 052:0000000c000000c000000c000000c000000c000000c000000000000000000000
// 053:c00000000c00000000c00000000c00000000c00000000c000000000000000000
// 055:c0000000c0000000c0000000c0000000c0000000000000000000000000000000
// 064:5555550050000550500005505555550050000550500005505555550000000000
// 065:0055500005555500555055505500055055000550555555505500055000000000
// 066:5500005555500555055555500055550000555500055555505550055555000055
// 067:5500550055005500550055000555500000550000005500000055000000550000
// </TILES>

// <WAVES>
// 000:00000000ffffffff00000000ffffffff
// 001:0123456789abcdeffedcba9876543210
// 002:0123456789abcdef0123456789abcdef
// </WAVES>

// <SFX>
// 000:000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000304000000000
// </SFX>

// <TRACKS>
// 000:100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
// </TRACKS>

// <PALETTE>
// 000:16171a7f0622d62411ff8426ffd100fafdffff80a4ff267494216a43006723497568aed4bfff3c10d275007899002859
// </PALETTE>

